<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
<head>
	<title>jsSHA - SHA Hashes in JavaScript</title>
	<meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
	<meta name="keywords" content="SHA, SHA-1, SHA-2, SHA-224, SHA-256, SHA-384, SHA-512, HMAC, javascript, JS, Secure Hash Standard, hash, security, cryptography, FIPS 180-2" />
	<link rel="stylesheet" type="text/css" href="style.css" />
	<script type="text/javascript">
	(function(F){function p(d,a,c){var g=0,b=[],e=0,f,k,l,h,m,u,q,v=!1,n=[],r=[],t,p=!1;c=c||{};f=c.encoding||"UTF8";t=c.numRounds||1;l=y(a,f);if(t!==parseInt(t,10)||1>t)throw Error("numRounds must a integer >= 1");if("SHA-1"===d)m=512,u=z,q=G,h=160;else throw Error("Chosen SHA variant is not supported");k=w(d);this.setHMACKey=function(a,b,e){var c;if(!0===v)throw Error("HMAC key already set");if(!0===p)throw Error("Cannot set HMAC key after calling update");f=(e||{}).encoding||"UTF8";b=
y(b,f)(a);a=b.binLen;b=b.value;c=m>>>3;e=c/4-1;if(c<a/8){for(b=q(b,a,0,w(d));b.length<=e;)b.push(0);b[e]&=4294967040}else if(c>a/8){for(;b.length<=e;)b.push(0);b[e]&=4294967040}for(a=0;a<=e;a+=1)n[a]=b[a]^909522486,r[a]=b[a]^1549556828;k=u(n,k);g=m;v=!0};this.update=function(a){var c,d,f,h=0,q=m>>>5;c=l(a,b,e);a=c.binLen;d=c.value;c=a>>>5;for(f=0;f<c;f+=q)h+m<=a&&(k=u(d.slice(f,f+q),k),h+=m);g+=h;b=d.slice(h>>>5);e=a%m;p=!0};this.getHash=function(a,c){var f,l,m,n;if(!0===v)throw Error("Cannot call getHash after setting HMAC key");
m=A(c);switch(a){case "HEX":f=function(a){return B(a,m)};break;case "B64":f=function(a){return C(a,m)};break;case "BYTES":f=D;break;case "ARRAYBUFFER":try{l=new ArrayBuffer(0)}catch(L){throw Error("ARRAYBUFFER not supported by this environment");}f=E;break;default:throw Error("format must be HEX, B64, BYTES, or ARRAYBUFFER");}n=q(b.slice(),e,g,k.slice());for(l=1;l<t;l+=1)n=q(n,h,0,w(d));return f(n)};this.getHMAC=function(a,c){var f,l,n,p;if(!1===v)throw Error("Cannot call getHMAC without first setting HMAC key");
n=A(c);switch(a){case "HEX":f=function(a){return B(a,n)};break;case "B64":f=function(a){return C(a,n)};break;case "BYTES":f=D;break;case "ARRAYBUFFER":try{f=new ArrayBuffer(0)}catch(t){throw Error("ARRAYBUFFER not supported by this environment");}f=E;break;default:throw Error("outputFormat must be HEX, B64, BYTES, or ARRAYBUFFER");}l=q(b.slice(),e,g,k.slice());p=u(r,w(d));p=q(l,h,m,p);return f(p)}}function H(d,a,c){var g=d.length,b,e,f,k,l;a=a||[0];c=c||0;l=c>>>3;if(0!==g%2)throw Error("String of HEX type must be in byte increments");
for(b=0;b<g;b+=2){e=parseInt(d.substr(b,2),16);if(isNaN(e))throw Error("String of HEX type contains invalid characters");k=(b>>>1)+l;for(f=k>>>2;a.length<=f;)a.push(0);a[f]|=e<<8*(3-k%4)}return{value:a,binLen:4*g+c}}function I(d,a,c){var g=[],b,e,f,k,g=a||[0];c=c||0;e=c>>>3;for(b=0;b<d.length;b+=1)a=d.charCodeAt(b),k=b+e,f=k>>>2,g.length<=f&&g.push(0),g[f]|=a<<8*(3-k%4);return{value:g,binLen:8*d.length+c}}function J(d,a,c){var g=[],b=0,e,f,k,l,h,m,g=a||[0];c=c||0;a=c>>>3;if(-1===d.search(/^[a-zA-Z0-9=+\/]+$/))throw Error("Invalid character in base-64 string");
f=d.indexOf("=");d=d.replace(/\=/g,"");if(-1!==f&&f<d.length)throw Error("Invalid '=' found in base-64 string");for(f=0;f<d.length;f+=4){h=d.substr(f,4);for(k=l=0;k<h.length;k+=1)e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".indexOf(h[k]),l|=e<<18-6*k;for(k=0;k<h.length-1;k+=1){m=b+a;for(e=m>>>2;g.length<=e;)g.push(0);g[e]|=(l>>>16-8*k&255)<<8*(3-m%4);b+=1}}return{value:g,binLen:8*b+c}}function K(d,a,c){var g=[],b,e,f,g=a||[0];c=c||0;b=c>>>3;for(a=0;a<d.byteLength;a+=1)f=a+
b,e=f>>>2,g.length<=e&&g.push(0),g[e]|=d[a]<<8*(3-f%4);return{value:g,binLen:8*d.byteLength+c}}function B(d,a){var c="",g=4*d.length,b,e;for(b=0;b<g;b+=1)e=d[b>>>2]>>>8*(3-b%4),c+="0123456789abcdef".charAt(e>>>4&15)+"0123456789abcdef".charAt(e&15);return a.outputUpper?c.toUpperCase():c}function C(d,a){var c="",g=4*d.length,b,e,f;for(b=0;b<g;b+=3)for(f=b+1>>>2,e=d.length<=f?0:d[f],f=b+2>>>2,f=d.length<=f?0:d[f],f=(d[b>>>2]>>>8*(3-b%4)&255)<<16|(e>>>8*(3-(b+1)%4)&255)<<8|f>>>8*(3-(b+2)%4)&255,e=0;4>
e;e+=1)8*b+6*e<=32*d.length?c+="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(f>>>6*(3-e)&63):c+=a.b64Pad;return c}function D(d){var a="",c=4*d.length,g,b;for(g=0;g<c;g+=1)b=d[g>>>2]>>>8*(3-g%4)&255,a+=String.fromCharCode(b);return a}function E(d){var a=4*d.length,c,g=new ArrayBuffer(a);for(c=0;c<a;c+=1)g[c]=d[c>>>2]>>>8*(3-c%4)&255;return g}function A(d){var a={outputUpper:!1,b64Pad:"="};d=d||{};a.outputUpper=d.outputUpper||!1;!0===d.hasOwnProperty("b64Pad")&&(a.b64Pad=
d.b64Pad);if("boolean"!==typeof a.outputUpper)throw Error("Invalid outputUpper formatting option");if("string"!==typeof a.b64Pad)throw Error("Invalid b64Pad formatting option");return a}function y(d,a){var c;switch(a){case "UTF8":case "UTF16BE":case "UTF16LE":break;default:throw Error("encoding must be UTF8, UTF16BE, or UTF16LE");}switch(d){case "HEX":c=H;break;case "TEXT":c=function(c,b,e){var f=[],d=[],l=0,h,m,n,q,p,f=b||[0];b=e||0;n=b>>>3;if("UTF8"===a)for(h=0;h<c.length;h+=1)for(e=c.charCodeAt(h),
d=[],128>e?d.push(e):2048>e?(d.push(192|e>>>6),d.push(128|e&63)):55296>e||57344<=e?d.push(224|e>>>12,128|e>>>6&63,128|e&63):(h+=1,e=65536+((e&1023)<<10|c.charCodeAt(h)&1023),d.push(240|e>>>18,128|e>>>12&63,128|e>>>6&63,128|e&63)),m=0;m<d.length;m+=1){p=l+n;for(q=p>>>2;f.length<=q;)f.push(0);f[q]|=d[m]<<8*(3-p%4);l+=1}else if("UTF16BE"===a||"UTF16LE"===a)for(h=0;h<c.length;h+=1){e=c.charCodeAt(h);"UTF16LE"===a&&(m=e&255,e=m<<8|e>>>8);p=l+n;for(q=p>>>2;f.length<=q;)f.push(0);f[q]|=e<<8*(2-p%4);l+=2}return{value:f,
binLen:8*l+b}};break;case "B64":c=J;break;case "BYTES":c=I;break;case "ARRAYBUFFER":try{c=new ArrayBuffer(0)}catch(g){throw Error("ARRAYBUFFER not supported by this environment");}c=K;break;default:throw Error("format must be HEX, TEXT, B64, BYTES, or ARRAYBUFFER");}return c}function n(d,a){return d<<a|d>>>32-a}function r(d,a){var c=(d&65535)+(a&65535);return((d>>>16)+(a>>>16)+(c>>>16)&65535)<<16|c&65535}function x(d,a,c,g,b){var e=(d&65535)+(a&65535)+(c&65535)+(g&65535)+(b&65535);return((d>>>16)+
(a>>>16)+(c>>>16)+(g>>>16)+(b>>>16)+(e>>>16)&65535)<<16|e&65535}function w(d){if("SHA-1"===d)d=[1732584193,4023233417,2562383102,271733878,3285377520];else throw Error("No SHA variants supported");return d}function z(d,a){var c=[],g,b,e,f,k,l,h;g=a[0];b=a[1];e=a[2];f=a[3];k=a[4];for(h=0;80>h;h+=1)c[h]=16>h?d[h]:n(c[h-3]^c[h-8]^c[h-14]^c[h-16],1),l=20>h?x(n(g,5),b&e^~b&f,k,1518500249,c[h]):40>h?x(n(g,5),b^e^f,k,1859775393,c[h]):60>h?x(n(g,5),b&e^b&f^e&f,k,2400959708,c[h]):x(n(g,5),b^e^f,k,3395469782,
c[h]),k=f,f=e,e=n(b,30),b=g,g=l;a[0]=r(g,a[0]);a[1]=r(b,a[1]);a[2]=r(e,a[2]);a[3]=r(f,a[3]);a[4]=r(k,a[4]);return a}function G(d,a,c,g){var b;for(b=(a+65>>>9<<4)+15;d.length<=b;)d.push(0);d[a>>>5]|=128<<24-a%32;a+=c;d[b]=a&4294967295;d[b-1]=a/4294967296|0;a=d.length;for(b=0;b<a;b+=16)g=z(d.slice(b,b+16),g);return g}"function"===typeof define&&define.amd?define(function(){return p}):"undefined"!==typeof exports?"undefined"!==typeof module&&module.exports?module.exports=exports=p:exports=p:F.jsSHA=
p})(this);
	</script>
	<script type="text/javascript">
		function calcHash() {
			try {
				var hashInput = document.getElementById("hashInputText");
				var hashInputType = document.getElementById("hashInputType");
				var hashVariant = document.getElementById("hashVariant");
				var hashRounds = document.getElementById("hashRounds");
				var hashOutputType = document.getElementById("hashOutputType");
				var hashOutput = document.getElementById("hashOutputText");
				var hashOutputBase64 = document.getElementById("hashOutputBase64");
				var hashObj = new jsSHA(
					hashVariant.options[hashVariant.selectedIndex].value,
					hashInputType.options[hashInputType.selectedIndex].value,
					{numRounds: parseInt(hashRounds.value, 10)}
				);
				hashObj.update(hashInput.value);
				hashOutput.value = hashObj.getHash(hashOutputType.options[hashOutputType.selectedIndex].value);
				hashOutputBase64.value = btoa(hashOutput.value.toUpperCase());
			} catch(e) {
				hashOutput.value = e.message
			}
		}

		function calcHMAC() {
			try {
				var hmacText = document.getElementById("hmacInputText");
				var hmacTextType = document.getElementById("hmacTextType");
				var hmacKeyInput = document.getElementById("hmacInputKey");
				var hmacKeyInputType = document.getElementById("hmacKeyType");
				var hmacVariant = document.getElementById("hmacVariant");
				var hmacOutputType = document.getElementById("hmacOutputType");
				var hmacOutput = document.getElementById("hmacOutputText");
				var hmacObj = new jsSHA(
					hmacVariant.options[hmacVariant.selectedIndex].value,
					hmacTextType.options[hmacTextType.selectedIndex].value
				);
				hmacObj.setHMACKey(
					hmacKeyInput.value,
					hmacKeyInputType.options[hmacKeyInputType.selectedIndex].value
				);
				hmacObj.update(hmacText.value);

				hmacOutput.value = hmacObj.getHMAC(hmacOutputType.options[hmacOutputType.selectedIndex].value);
			} catch(e) {
				hmacOutput.value = e.message
			}
		}
	</script>
</head>
<body onload="calcHash();calcHMAC()">
	<div id="container">
		<div>
			<h1>About</h1>
			<p>
				jsSHA is a JavaScript implementation of the entire family of SHA hashes as defined in FIPS 180-2 (SHA-1, SHA-224, SHA-256,
				SHA-384, and SHA-512) as well as HMAC.  Despite JavaScript not natively supporting 64-bit operations, SHA-384 and SHA-512 are even implemented!
				jsSHA is also 100% cross-browser compatible.
			</p>
		</div>
		<div>
			<h1>Newest Release / Download</h1>
			<p>
				As of 13 May 2016, the newest release is v2.1.0 and can be found at <a href="https://github.com/Caligatio/jsSHA/releases/tag/v2.1.0">GitHub</a>.
			</p>
		</div>
		<div>
			<h1>Demo</h1>
			<p>
				Be aware that if JavaScript is disabled in your browser there is the possibility that information entered into the below fields may be transmitted to the GitHub web servers.  Ensure that JavaScript is enabled to prevent this possibility.
			</p>
			<form action="#" method="get">
				<fieldset>
					<legend>Hashing Demo</legend>
					<p>
						Simply insert your text to be hashed, input type, the SHA variant you wish to use, and the output format.<br />
						<span style="font-size: 12px">Note: You may have to scroll the output text for longer length hashes</span>
					</p>
					<div>
						<label for="hashInputText">Input Text:</label><input type="text" size="75" name="hashInputText" id="hashInputText" onkeyup="calcHash()" />
					</div>
					<div>
						<label for="hashInputType">Input Type:</label>
						<select name="hashInputType" id="hashInputType" onchange="calcHash()">
							<option value="B64">Base-64</option>
							<option selected="selected">TEXT</option>
							<option>HEX</option>
						</select>
					</div>
					<div>
						<label for="hashVariant">SHA Variant:</label>
						<select name="hashVariant" id="hashVariant" onchange="calcHash()">
							<option>SHA-1</option>
							<option>SHA-224</option>
							<option>SHA-256</option>
							<option>SHA-384</option>
							<option>SHA-512</option>
						</select>
					</div>
					<div>
						<label for="hashRounds">Number of Rounds:</label><input type="text" size="5" name="hashRounds" id="hashRounds" value="1" onkeyup="calcHash()" />
					</div>
					<div>
						<label for="hashOutputType">Output Type:</label>
						<select name="hashOutputType" id="hashOutputType" onchange="calcHash()">
							<option value="B64">Base-64</option>
							<option selected="selected">HEX</option>
						</select>
					</div>
					<div>
						<label for="hashOutputText">Output Hash:</label>
						<input type="text" size="75" name="hashOutputText" id="hashOutputText" style="background-color: #b1ceed" />
					</div>
					<div>
						<label for="hashOutputText">Output Base64:</label>
						<input type="text" size="75" name="hashOutputText" id="hashOutputBase64" style="background-color: #b1ceed" />
					</div>
				</fieldset>				
			</form>
		</div>				
	</div>
</body>
</html>
